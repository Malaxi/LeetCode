package 位运算;
/*
    56-I.一个整型数组 nums 里除两个数字之外，其他数字都出现了两次。
         请写程序找出这两个只出现一次的数字。要求时间复杂度是O(n)，空间复杂度是O(1)

         本质：通过m找到x和y的第一个不同的二进制位，通过该二进制位就可以区分x和y(进行&操作的结果是一个为1一个为0)，
              这样就可以将它们放进两个不同的子数组中。其它的出现两次的数字与m的&操作一定相同，一定会放在同一个组中
              (爱放在哪个组就放在哪个组)，两个组分别进行异或操作就可以得到两个只出现一次的数字
 */
public class 数组中数字出现的次数I {
    public int[] singleNumbers(int[] nums) {
        int x = 0, y = 0, n = 0, m = 1;
        for(int num : nums)               // 1. 遍历异或
            n ^= num;
        while((n & m) == 0)               // 2. 循环左移，计算 m
            m <<= 1;
        for(int num: nums) {              // 3. 遍历 nums 分组
            if((num & m) != 0) x ^= num;  // 4. 当 num & m != 0
            else y ^= num;                // 4. 当 num & m == 0
        }
        return new int[] {x, y};          // 5. 返回出现一次的数字
    }
}
